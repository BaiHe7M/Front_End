{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport UserLogin from '@/components/UserLogin.vue'; // 登录组件\nimport UserRegister from '@/components/UserRegister.vue'; // 注册组件\nimport FileUpload from '@/components/FileUpload.vue'; // 上传组件\nimport ReportView from '@/components/ReportView.vue'; // 报告组件\nimport Dashboard from '@/components/Dashboard.vue'; // 主页组件\n\nVue.use(VueRouter);\n\n// 定义路由\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: UserLogin,\n  meta: {\n    requiresAuth: false\n  } // 不需要登录\n}, {\n  path: '/register',\n  name: 'Register',\n  component: UserRegister,\n  meta: {\n    requiresAuth: false\n  } // 不需要登录\n}, {\n  path: '/upload',\n  name: 'Upload',\n  component: FileUpload,\n  meta: {\n    requiresAuth: true\n  } // 需要登录\n}, {\n  path: '/report',\n  name: 'Report',\n  component: ReportView,\n  meta: {\n    requiresAuth: true\n  } // 需要登录\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  } // 需要登录\n}, {\n  path: '/',\n  redirect: '/dashboard' // 默认重定向到主页\n}, {\n  path: '*',\n  // 404 页面\n  redirect: '/dashboard' // 重定向到主页\n}];\n\n// 创建路由实例\nconst router = new VueRouter({\n  mode: 'history',\n  routes\n});\n\n// 路由守卫：检查用户是否登录\nrouter.beforeEach((to, from, next) => {\n  const isAuthenticated = !!localStorage.getItem('token'); // 检查是否有 token\n\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // 如果目标路由需要登录\n    if (!isAuthenticated) {\n      // 如果未登录，重定向到登录页\n      next({\n        path: '/login',\n        query: {\n          redirect: to.fullPath\n        } // 保存目标路径，登录后跳转\n      });\n    } else {\n      // 如果已登录，继续导航\n      next();\n    }\n  } else {\n    // 如果目标路由不需要登录，直接继续导航\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","UserLogin","UserRegister","FileUpload","ReportView","Dashboard","use","routes","path","name","component","meta","requiresAuth","redirect","router","mode","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","matched","some","record","query","fullPath"],"sources":["C:/Users/杨俊昊/my-element-ui-project/src/router/index.js"],"sourcesContent":["import Vue from 'vue';\r\nimport VueRouter from 'vue-router';\r\nimport UserLogin from '@/components/UserLogin.vue'; // 登录组件\r\nimport UserRegister from '@/components/UserRegister.vue'; // 注册组件\r\nimport FileUpload from '@/components/FileUpload.vue'; // 上传组件\r\nimport ReportView from '@/components/ReportView.vue'; // 报告组件\r\nimport Dashboard from '@/components/Dashboard.vue'; // 主页组件\r\n\r\nVue.use(VueRouter);\r\n\r\n// 定义路由\r\nconst routes = [\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: UserLogin,\r\n    meta: { requiresAuth: false } // 不需要登录\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: UserRegister,\r\n    meta: { requiresAuth: false } // 不需要登录\r\n  },\r\n  {\r\n    path: '/upload',\r\n    name: 'Upload',\r\n    component: FileUpload,\r\n    meta: { requiresAuth: true } // 需要登录\r\n  },\r\n  {\r\n    path: '/report',\r\n    name: 'Report',\r\n    component: ReportView,\r\n    meta: { requiresAuth: true } // 需要登录\r\n  },\r\n  {\r\n    path: '/dashboard',\r\n    name: 'Dashboard',\r\n    component: Dashboard,\r\n    meta: { requiresAuth: true } // 需要登录\r\n  },\r\n  {\r\n    path: '/',\r\n    redirect: '/dashboard', // 默认重定向到主页\r\n  },\r\n  {\r\n    path: '*', // 404 页面\r\n    redirect: '/dashboard' // 重定向到主页\r\n  }\r\n];\r\n\r\n// 创建路由实例\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  routes,\r\n});\r\n\r\n// 路由守卫：检查用户是否登录\r\nrouter.beforeEach((to, from, next) => {\r\n  const isAuthenticated = !!localStorage.getItem('token'); // 检查是否有 token\r\n\r\n  if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    // 如果目标路由需要登录\r\n    if (!isAuthenticated) {\r\n      // 如果未登录，重定向到登录页\r\n      next({\r\n        path: '/login',\r\n        query: { redirect: to.fullPath } // 保存目标路径，登录后跳转\r\n      });\r\n    } else {\r\n      // 如果已登录，继续导航\r\n      next();\r\n    }\r\n  } else {\r\n    // 如果目标路由不需要登录，直接继续导航\r\n    next();\r\n  }\r\n});\r\n\r\nexport default router;"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,SAAS,MAAM,4BAA4B,CAAC,CAAC;AACpD,OAAOC,YAAY,MAAM,+BAA+B,CAAC,CAAC;AAC1D,OAAOC,UAAU,MAAM,6BAA6B,CAAC,CAAC;AACtD,OAAOC,UAAU,MAAM,6BAA6B,CAAC,CAAC;AACtD,OAAOC,SAAS,MAAM,4BAA4B,CAAC,CAAC;;AAEpDN,GAAG,CAACO,GAAG,CAACN,SAAS,CAAC;;AAElB;AACA,MAAMO,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAET,SAAS;EACpBU,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM,CAAC,CAAC;AAChC,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAER,YAAY;EACvBS,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM,CAAC,CAAC;AAChC,CAAC,EACD;EACEJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEP,UAAU;EACrBQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAC/B,CAAC,EACD;EACEJ,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEN,UAAU;EACrBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAC/B,CAAC,EACD;EACEJ,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEL,SAAS;EACpBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK,CAAC,CAAC;AAC/B,CAAC,EACD;EACEJ,IAAI,EAAE,GAAG;EACTK,QAAQ,EAAE,YAAY,CAAE;AAC1B,CAAC,EACD;EACEL,IAAI,EAAE,GAAG;EAAE;EACXK,QAAQ,EAAE,YAAY,CAAC;AACzB,CAAC,CACF;;AAED;AACA,MAAMC,MAAM,GAAG,IAAId,SAAS,CAAC;EAC3Be,IAAI,EAAE,SAAS;EACfR;AACF,CAAC,CAAC;;AAEF;AACAO,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEzD,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACd,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD;IACA,IAAI,CAACQ,eAAe,EAAE;MACpB;MACAD,IAAI,CAAC;QACHX,IAAI,EAAE,QAAQ;QACdkB,KAAK,EAAE;UAAEb,QAAQ,EAAEI,EAAE,CAACU;QAAS,CAAC,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAR,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACL;IACAA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}