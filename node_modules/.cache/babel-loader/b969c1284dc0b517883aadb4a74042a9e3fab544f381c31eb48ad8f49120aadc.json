{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'UserRegister',\n  data() {\n    const validatePass = (rule, value, callback) => {\n      if (value !== this.registerForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      registerForm: {\n        username: '',\n        password: '',\n        checkPassword: '',\n        email: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }, {\n          min: 4,\n          max: 16,\n          message: '长度在 4 到 16 个字符',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 18,\n          message: '长度在 6 到 18 个字符',\n          trigger: 'blur'\n        }],\n        checkPassword: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }, {\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱地址',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: ['blur', 'change']\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$axios.post('/api/register', this.registerForm).then(() => {\n            this.$message.success('注册成功！');\n            this.$router.push('/login');\n          }).catch(err => {\n            this.$message.error(`注册失败: ${err.response?.data?.message || '服务器错误'}`);\n          });\n        }\n      });\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePass","rule","value","callback","registerForm","password","Error","username","checkPassword","email","rules","required","message","trigger","min","max","validator","type","methods","submitForm","formName","$refs","validate","valid","$axios","post","then","$message","success","$router","push","catch","err","error","response","goToLogin"],"sources":["src/components/UserRegister.vue"],"sourcesContent":["<template>\r\n  <el-form \r\n    :model=\"registerForm\" \r\n    :rules=\"rules\" \r\n    ref=\"registerForm\" \r\n    label-width=\"100px\" \r\n    class=\"register-form\"\r\n  >\r\n    <h2 class=\"title\">用户注册</h2>\r\n    \r\n    <el-form-item label=\"用户名\" prop=\"username\">\r\n      <el-input v-model=\"registerForm.username\"></el-input>\r\n    </el-form-item>\r\n\r\n    <el-form-item label=\"密码\" prop=\"password\">\r\n      <el-input type=\"password\" v-model=\"registerForm.password\"></el-input>\r\n    </el-form-item>\r\n\r\n    <el-form-item label=\"确认密码\" prop=\"checkPassword\">\r\n      <el-input type=\"password\" v-model=\"registerForm.checkPassword\"></el-input>\r\n    </el-form-item>\r\n\r\n    <el-form-item label=\"邮箱\" prop=\"email\">\r\n      <el-input v-model=\"registerForm.email\"></el-input>\r\n    </el-form-item>\r\n\r\n    <el-form-item>\r\n      <el-button type=\"primary\" @click=\"submitForm('registerForm')\">立即注册</el-button>\r\n      <el-button @click=\"goToLogin\">已有账号？去登录</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'UserRegister',\r\n  data() {\r\n    const validatePass = (rule, value, callback) => {\r\n      if (value !== this.registerForm.password) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    return {\r\n      registerForm: {\r\n        username: '',\r\n        password: '',\r\n        checkPassword: '',\r\n        email: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 4, max: 16, message: '长度在 4 到 16 个字符', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n          { min: 6, max: 18, message: '长度在 6 到 18 个字符', trigger: 'blur' }\r\n        ],\r\n        checkPassword: [\r\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n          { validator: validatePass, trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.$axios.post('/api/register', this.registerForm)\r\n            .then(() => {\r\n              this.$message.success('注册成功！');\r\n              this.$router.push('/login');\r\n            })\r\n            .catch(err => {\r\n              this.$message.error(`注册失败: ${err.response?.data?.message || '服务器错误'}`);\r\n            });\r\n        }\r\n      });\r\n    },\r\n    goToLogin() {\r\n      this.$router.push('/login');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-form {\r\n  width: 500px;\r\n  margin: 50px auto;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: #303133;\r\n}\r\n</style>\r\n"],"mappings":";AAkCA;EACAA,IAAA;EACAC,KAAA;IACA,MAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA,UAAAE,YAAA,CAAAC,QAAA;QACAF,QAAA,KAAAG,KAAA;MACA;QACAH,QAAA;MACA;IACA;IAEA;MACAC,YAAA;QACAG,QAAA;QACAF,QAAA;QACAG,aAAA;QACAC,KAAA;MACA;MACAC,KAAA;QACAH,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,QAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,aAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,SAAA,EAAAhB,YAAA;UAAAa,OAAA;QAAA,EACA;QACAJ,KAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAI,IAAA;UAAAL,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAK,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,MAAA,CAAAC,IAAA,uBAAArB,YAAA,EACAsB,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA,GACAC,KAAA,CAAAC,GAAA;YACA,KAAAL,QAAA,CAAAM,KAAA,UAAAD,GAAA,CAAAE,QAAA,EAAAnC,IAAA,EAAAa,OAAA;UACA;QACA;MACA;IACA;IACAuB,UAAA;MACA,KAAAN,OAAA,CAAAC,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}