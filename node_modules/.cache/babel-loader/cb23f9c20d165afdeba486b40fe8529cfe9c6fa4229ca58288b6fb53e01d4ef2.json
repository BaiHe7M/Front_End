{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$axios.post('/api/login', this.loginForm).then(res => {\n            localStorage.setItem('token', res.data.token); // 存储 token\n            this.$message.success('登录成功！');\n            this.$router.push('/dashboard'); // 登录成功后跳转到主页面\n          }).catch(err => {\n            this.$message.error(`登录失败: ${err.response?.data?.message || '服务器错误'}`);\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","loginForm","username","password","rules","required","message","trigger","methods","goToRegister","$router","push","submitForm","formName","$refs","validate","valid","$axios","post","then","res","localStorage","setItem","token","$message","success","catch","err","error","response"],"sources":["src/components/UserLogin.vue"],"sourcesContent":["<template>\r\n  <el-form \r\n    :model=\"loginForm\" \r\n    :rules=\"rules\" \r\n    ref=\"loginForm\" \r\n    label-width=\"100px\" \r\n    class=\"login-form\"\r\n  >\r\n    <h2 class=\"title\">用户登录</h2>\r\n\r\n    <!-- 用户名和密码输入框 -->\r\n    <el-form-item label=\"用户名\" prop=\"username\">\r\n      <el-input v-model=\"loginForm.username\"></el-input>\r\n    </el-form-item>\r\n\r\n    <el-form-item label=\"密码\" prop=\"password\">\r\n      <el-input type=\"password\" v-model=\"loginForm.password\"></el-input>\r\n    </el-form-item>\r\n\r\n    <el-form-item>\r\n      <el-button type=\"primary\" @click=\"submitForm('loginForm')\">登录</el-button>\r\n      <el-button @click=\"goToRegister\">没有账号？去注册</el-button>\r\n    </el-form-item>\r\n  </el-form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'UserLogin',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    goToRegister() {\r\n      this.$router.push('/register');\r\n    },\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.$axios.post('/api/login', this.loginForm)\r\n            .then(res => {\r\n              localStorage.setItem('token', res.data.token); // 存储 token\r\n              this.$message.success('登录成功！');\r\n              this.$router.push('/dashboard'); // 登录成功后跳转到主页面\r\n            })\r\n            .catch(err => {\r\n              this.$message.error(`登录失败: ${err.response?.data?.message || '服务器错误'}`);\r\n            });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.title {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  color: #303133;\r\n}\r\n</style>\r\n"],"mappings":";AA2BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,aAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,MAAA,CAAAC,IAAA,oBAAAjB,SAAA,EACAkB,IAAA,CAAAC,GAAA;YACAC,YAAA,CAAAC,OAAA,UAAAF,GAAA,CAAApB,IAAA,CAAAuB,KAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAf,OAAA,CAAAC,IAAA;UACA,GACAe,KAAA,CAAAC,GAAA;YACA,KAAAH,QAAA,CAAAI,KAAA,UAAAD,GAAA,CAAAE,QAAA,EAAA7B,IAAA,EAAAM,OAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}